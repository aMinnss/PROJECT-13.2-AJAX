/* ----------------------------------------------------------Задание 1------------------------------------------------------------------------- */
// AJAX сам по себе не является языком программирования, это технология. Он отправляет запрос без перегруза страницы. 
// То есть, он отправляет запрос на сервер, получает ответ и обновляет часть страницы. Его инструменты: fetch(),XMLHttpRequest, axios и т.п. 
// К примеру комментарии в Ютуб, где мы нажимаем "Показать еще" и там просто появляются новые комментарии без перегруза всего сайта. 
// Также можно взять инстраграм. Когда мы скроллим вниз, у нас появляются новые посты и при этом сам он полностью не перегружается. 

/* ----------------------------------------------------------Задание 2------------------------------------------------------------------------- */
const xhr = new XMLHttpRequest();//создаёт новый объект XMLHttpRequest, который позволяет отправлять HTTP-запросы к серверу из JavaScript — без перезагрузки страницы
xhr.open('GET', 'https://jsonplaceholder.typicode.com/posts', true); //настраивает GET-запрос на указанный URL, асинхронно (true)
xhr.onload = function () {
    if (xhr.status === 200){
        const data = JSON.parse(xhr.responseText); // парсим JSON в массив объектов
        data.forEach(post => {
            console.log(post.title); // выводим заголовки постов
        });
    } else {
        console.error('Ошибка загрузки данных:', xhr.status); //Обрабатывает ответ: если всё ок (код 200), выводит заголовки.
    }                                                         //В else — обработка ошибки загрузки (например, 404 или 500)
};
xhr.onerror = function() {
    console.error('Ошибка соединения'); //На случай, если вообще не удалось соединиться (интернет, сервер недоступен и т.д.)
};
xhr.send(); //Отправка запроса

/* ----------------------------------------------------------Задание 3------------------------------------------------------------------------- */

const xhr = new XMLHttpRequest();

xhr.open('GET', 'https://jsonplaceholder.typicode.com/posts', true);

xhr.onload = function () {
  if (xhr.status === 200) {
    const posts = JSON.parse(xhr.responseText);

    const list = document.createElement('ul');

    posts.forEach(post => {
      const li = document.createElement('li');
      li.textContent = post.title;
      list.appendChild(li);
    });

    document.body.appendChild(list);
  } else {
    console.error('Ошибка загрузки. Статус:', xhr.status);
  }
};

xhr.onerror = function () {
  console.error('Ошибка сети при загрузке постов');
};

xhr.send();


/* ----------------------------------------------------------Задание 4------------------------------------------------------------------------- */


/* ----------------------------------------------------------Задание 5------------------------------------------------------------------------- */


/* ----------------------------------------------------------Задание 6------------------------------------------------------------------------- */
